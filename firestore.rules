
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow public read access to partners
    match /partners/{partnerId} {
      allow read: if true;
    }
    match /partners/{path=**} {
      allow read: if true;
    }

    // Allow users to read their own user document, and concierges to update points
    match /users/{userId} {
      allow read: if request.auth.uid == userId;
      // This rule is for the backend function, which has admin rights,
      // but as a good practice, we can define it.
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'concierge';
    }

    // Allow authenticated users to create concierge requests
    // Allow any authenticated user to read all requests (for concierge dashboard)
    match /conciergeRequests/{requestId} {
      allow read, create: if request.auth != null;
       // Allow update only for the backend function (which bypasses rules) or a concierge role
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'concierge';
    }
    
    // Allow users to query their own transactions.
    // This requires a rule on the collection itself.
    match /transactions/{transaction} {
      allow read: if request.auth.uid == resource.data.userId;
      allow list: if request.auth.uid == request.query.where.userId;
    }
  }
}
